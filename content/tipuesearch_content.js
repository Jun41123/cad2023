var tipuesearch = {"pages": [{'title': 'About', 'text': ' https://github.com/mdecycu/cmsite  \n 倉儲 : Jun41123/cad2023 (github.com) \n 網站 : cmsite (jun41123.github.io) \n 心得 : \n', 'tags': '', 'url': 'About.html'}, {'title': 'links', 'text': '電腦輔助設計與實習課程分組網站在 s.cycu.org 所分配的外部與內部埠號:\xa0cad2023_ag5: 8236, 9236 \n 學員固定 IPv6 位址: 2001:288:6004:17:2023:cada::42 \n \n', 'tags': '', 'url': 'links.html'}, {'title': '上課進度', 'text': '', 'tags': '', 'url': '上課進度.html'}, {'title': 'w4 - w5', 'text': '*\xa0 \xa0建立考試帳號:需在系上IPV6的網路 , 就可以建立一個考試帳號( https://exam.cycu.org ) , 然後進行考試. \n *\xa0 \xa0建立網站: (1). 先建立一個自己的個人倉儲(github.com) . \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0(2). 再利用倉儲去建立一個靜態網頁(主頁面上有一個設定,點進去找到一個Pages,進去就可以建靜態了.) \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0(3). 在建立一個Replit帳號並且與 個人倉儲(github.com)做連結的動作. \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0(4). 利用Replit去建立動態網頁. \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0(5). 以上完成後就可以順利地做Push的動作,從動態推到靜態. \n *\xa0 \xa0學會使用CoppeliaSim \n *\xa0 \xa0記得準備隨身碟,免得造成自己的麻煩. \n *\xa0 \xa0本課程需下載可攜環境\xa0(下載包含 Python 3.12.0, Tiny C Compiler 與 CoppeliaSim 4.5.1 的\xa0portable_2024_cp_wcms_cad_cd_w_ebooks.7z , 1.2GB 解開後 3.3GB, 需要下載密碼). \n', 'tags': '', 'url': 'w4 - w5.html'}, {'title': 'w6 - w7', 'text': '*\xa0\xa0 2a 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cada::班級名單序號(42). \n *\xa0 前次上課有把網路設定下載下來存到隨身碟,進行本課程教室的網路設定. \n *\xa0 進行分組作業(9人一組): \n \xa0 \xa0 1 . 小組網站 : \xa0 https://41023134.github.io/cad2023_ag5/content/index.html \n \xa0 \xa0 2 . 小組倉儲 : \xa0 https://github.com/41023134/cad2023_ag5 \n', 'tags': '', 'url': 'w6 - w7.html'}, {'title': 'w8', 'text': '我悶要把動態的文件推到靜態,需要用可攜或是Replit才可以推上去,但因為 Replit是個付費軟體有些人漸漸地不能用,所以而外建立一個代理主機  s1511(透過 SSH 與分配埠號)\xa0 ,以下是 s1511  建立方式: \n 1 . 如何用遠端登入登出:遠端登入到 s1511.cycu.org (只支援 IPv6 網路協定),先在空白頁面建立ssh與sftp均在後面加上 cad學號@s1511.cycu.org, 使用ssh指令然後輸入密碼(密碼不會顯示出來),使用 putty.exe 設定 session 令其連接到\xa0 s1511.cycu.org,exit(這為登出的指令),假如在 IPv4下, 則 ssh 指令與 putty.exe 都必須透過能支援 IPv6 的代理主機進行連線. \n 2 .\xa0 如何取放檔案:利用 sftp 從 s1511.cycu.org,進入對應目錄後, 以 pwd 確認所在目錄後, 以 get 取下檔案, 以 put 放上檔案, 例如: 進入 images 目錄後, 可以透過 get gd_ex1.png 取下圖檔, 若要將圖檔放入 images 目錄, 則只要確定 sftp 進入後, cd 到 images 目錄, 然後以 put gd_ex1.png 將圖檔送入. \n 3 .\xa0 如何與 github 帳號彼此信任 :利用 ssh-keygen 在 .ssh 目錄建立 id_rsa 與 id_rsa.pub, 之後將 id_rsa.pub 登記到各自帳號下 settings 的 SSH and GPG keys 區域 ,\xa0.ssh 目錄中的\xa0 config(要先把檔案下載下來) , 將 SSH session 名稱設為 github.com ,\xa0將 上列 config 送到帳號下的 .ssh 目錄之後, 就可以利用 github.com 作為 session, 從 github.com 取下 cad2023 倉儲, 並且已經具備 git push 的權限. \n 4 .\xa0如何取下與啟動或關閉 cad2023 倉儲: 用SSH指令取下cad2023(git clone --recurse-\xa0 \xa0 \xa0 \xa0 \xa0 submodules\xa0git@github.com :帳號/cad2023.git ),再以server.py 進行編輯, 放入自己分配到的  9xxx 埠 後, 再送回,則可以利用 python3 server.py 啟動編輯網站, 並測試是否可以連線到\xa0 https://s1511.cycu.org:8xxxx \xa0,\xa0由於管理者內建密碼為 admin, 使用者修改後, 編碼字串將存入 config/config, 此檔案必須設為只有管理者可以 read, 若目前位於登入後的工作目錄,\xa0各用戶若希望刪除已經啟動的 Process, 可以找到所啟動的 PID 後, 以下列指令關閉服務 (若 PID = 1234). \n 5 .\xa0如何連到動態/設定靜態/連動動態改版與靜態:\xa0python3 server.py 啟動測試是否可以連線到 外部主機 \xa0 .\xa0\xa0可以透過 config 指令修改管理者密碼 / 編碼將存入 s1511 主機倉儲檔案中的 config/config 檔案中 / 檔案將只會位於 s1511, 而不會被推向 github.com / 先以 git config 設定 user.name 與 user.email, 此設定將會存入 .gitconfig 檔案中 / 前面已經在 /home/帳號/倉儲目錄\xa0 / 透過 SSH 協定從 github.com 取下檔案內容, 由於 SSH keys 的設定, 此一倉儲一旦改版, 可以在新增提交之後, 可以透過 git push 指令將改版資料推向 github.com / 靜態 git push 至 github.com 後, 將會透過 Github Pages 的設定進行轉檔 / 主機中伺服對應的倉儲靜態網站, 則可以將倉儲檔案放入帳號中的 public_html 目錄中 / 位於 public_html 僅需鏡射位於 github.com 中的倉儲檔案資料 / 利用 git clone --recurse-submodules https://github.com/帳號/倉儲名稱.git 取下 / 並可在https://s1511.cycu.org/~帳號/倉儲名稱 中擷取靜態網站資料 / 檔案改版, 而且資料已經推送到 github.com, 使用者就可以進入 public_html 中的對應倉儲目錄, 以 git pull 指令從 github.com 取得最新的版本資料, 此指令可以採手動 / acp 必須納入 public_html 目錄中的靜態網站 git pull, 且利用 chmod u+x acp 令其可以執行. \n 6 .\xa0對資料進行保全:\xa0 \n chmod u+x acp \n chmod og-rwx config/config \n chmod 711 /home/cad學號 \n chmod 755 /home/cad學號/public_html \n 7 .\xa0 網路連線協定:\xa0將 cad2023 倉儲資料取到 s1511.cycu.org 帳號下, 若使用 SSH 協定且位於只有 IPv6 網路協定, 則分別牽涉以 SSH 及 https 協定連線到 github.com 的設定(運用在 git clone --recurse-submodules\xa0git@github.com:帳號/cad2023.git). \n \xa0 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '\n', 'tags': '', 'url': 'w9.html'}, {'title': 'w12', 'text': '因為這周網路出點問題,所以建立一個代理主機 ocalhost(透過 token, SSH 確定 git push 權限, SSH 設定可透過 Putty 完成)(ssh-keygen 在 .ssh 建立 id_rsa 與 id_rsa.pub, 以 sftp 放入 config, 並利用 puttygent 將 id_rsa 轉為 .ppk 以便設立 session 用) \n 使用 ChatGPT 協助處理 上述問題一 \n', 'tags': '', 'url': 'w12.html'}, {'title': '課程總結', 'text': '倉儲與網站評分項目: \n ok A: 是否 按照進度明確標示倉儲的改版歷程 \n ok B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論 \n ok C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作 \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考 \n E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載 \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim \n G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬 \n H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬 \n I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬 \n J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載 \n K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬 \n L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答 \n 各學員倉儲與網站的評分及格標準為: \n 各學員必須在網站呈現 完整看過以下各階段的教學影片的歷程, 並了解其內容要旨 \n 並針對各階段 內容實際操作至少一遍 \n 教學影片 (登入 nfu Teams 才可以觀看): \n ok 1. \xa0 利用批次檔、登錄檔與 powershell 執行網路設定 \xa0 (7:15) \n 2. \xa0 Onshape 零組件轉入 CoppeliaSim \xa0 (19:58) \n ok 3. \xa0 從 github 空倉儲建立 cmsimde 網際內容管理倉儲 \xa0 (15:22) \n ok 4. \xa0 之二 \xa0 (34:20) \n 5. \xa0 利用 Pull Requests 提出修改 studlist 倉儲資料的用法 \xa0 (7:58) \n 6. \xa0 利用 SSH 協定取下倉儲並啟動編輯網站 \xa0 (22:05) \n 7. \xa0 之二 \xa0 (10:16) \n 8. \xa0 s.cycu.org 伺服器設定操作 \xa0 (18:47) \n 9. \xa0 之二 \xa0 (9:46) \n 10. \xa0 之三 \xa0 (13:58, 無語音說明) \n 11. \xa0 之四 \xa0 (21:30) \n 12. \xa0 之五 \xa0 (19:02) \n 13. \xa0 Wink 操作說明 \xa0 (2:05) \n 14. \xa0 課程內容摘要簡報說明 \xa0 (26:22) \n 15. \xa0 之二 \xa0 (12:22) \n 16. \xa0 利用 ChatGPt 協助座位排序與列印問題 \xa0 (9:36) \n 17. \xa0 之二 \xa0 (13:53, 有嚴重回音) \n 18. \xa0 利用 Solvespace 繪製零組件並轉入 CoppeliaSim \xa0 (17:55) \n 19. \xa0 之二 \xa0 (23:05, 有嚴重回音) \n 20. \xa0 簡化後的專案一鋼球永動模擬操作 \xa0 (12:37) \n 21. \xa0 之二 \xa0 (9:33) \n 22. \xa0 之三 \xa0 (21:09) \n 23. \xa0 之四 \xa0 (4:34) \n 24. \xa0 專案二 \xa0 (16:46) \n 25. \xa0 之二 \xa0 (15:41) \n 26. \xa0 之三 \xa0 (14:15)', 'tags': '', 'url': '課程總結.html'}, {'title': '41123141廖俊生', 'text': '目前做的這些覺得好難,有去看影片,但還是有點看不懂,但相信期末前可以做出來的,在這期間可以學到很多有趣的程式.', 'tags': '', 'url': '41123141廖俊生.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};